{"ast":null,"code":"import _classCallCheck from \"/Users/maddiemoritz/powerful-mountain-88889/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/maddiemoritz/powerful-mountain-88889/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/maddiemoritz/powerful-mountain-88889/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/maddiemoritz/powerful-mountain-88889/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/maddiemoritz/powerful-mountain-88889/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/maddiemoritz/powerful-mountain-88889/client/src/pages/SCR.js\";\nimport React, { Component } from 'react';\nimport cardData from '../utils/cardData.js';\nimport $ from 'jquery';\nimport CenteredTabs from '../components/CenteredTabs';\nimport '../index.css';\n\nvar SCR = /*#__PURE__*/function (_Component) {\n  _inherits(SCR, _Component);\n\n  function SCR(props, context) {\n    var _this;\n\n    _classCallCheck(this, SCR);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SCR).call(this, props, context));\n\n    _this.getRandomCard = function () {\n      console.group('get random card');\n      var flipped = Math.floor(Math.random() * 2) === 0 ? true : false;\n\n      var self = _assertThisInitialized(_assertThisInitialized(_this));\n\n      var cards = _this.props.Cards;\n      var randNum = Math.floor(Math.random() * (78 - 0 + 1));\n      var randCard = cards[randNum];\n      var randName = randCard.name;\n      var randKeysUp = randCard.keywords.upright;\n      var randKeysRev = randCard.keywords.reversed;\n      var src = randCard.src;\n      var randDes = randCard.description.basic;\n      var randUpright = randCard.description.upright;\n      var randReversed = randCard.description.reversed;\n      var reading = $('.reading_container');\n      var paras = document.getElementsByTagName('p');\n      console.log('card drawn', randCard);\n      $('.description').innerHTML = randDes;\n      reading.hide();\n      self.setState({\n        new: false,\n        loading: true,\n        random_card_flipped: flipped,\n        random_card_name: randName,\n        random_card_keys_up: randKeysUp,\n        random_card_keys_rev: randKeysRev,\n        random_card_description: randDes,\n        random_card_upright: randUpright,\n        random_card_reversed: randReversed,\n        random_card_src: src\n      }, function () {\n        setTimeout(function () {\n          self.setState({\n            loading: false\n          }, function () {\n            if (this.state.random_card_flipped) {\n              $('img').addClass('card_image_reversed');\n            } else {\n              $('img.card_image').removeClass('card_image_reversed');\n            }\n\n            reading.show();\n          });\n          self.replace_break(paras);\n        }, 2000);\n      });\n      console.groupEnd();\n    };\n\n    _this.replace_break = function (paras) {\n      console.log('replace break');\n\n      for (var i = 0; i < paras.length; i++) {\n        var new_p = paras[i].innerHTML.replace(/\\r?\\n/g, '<br/>');\n        paras[i].innerHTML = new_p;\n      }\n    };\n\n    _this.render = function () {\n      if (_this.state.loading) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"main-content SCR\",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 7\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"main-content \",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          className: \"pentacle\",\n          alt: \"yeah\",\n          src: \"https://upload.wikimedia.org/wikipedia/commons/9/97/Pentacle_2.svg\",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 16\n          }\n        })));\n      }\n\n      if (_this.state.new && !_this.state.loading) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"main-content SCR\",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 10\n          }\n        }, /*#__PURE__*/React.createElement(CenteredTabs, {\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(\"button\", {\n          onClick: _this.getRandomCard,\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }\n        }, \"Draw A Single Card\"), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"reading_container\",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 16\n          }\n        }));\n      }\n\n      if (!_this.state.random_card_flipped && !_this.state.loading && !_this.state.new) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"main-content SCR\",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 10\n          }\n        }, /*#__PURE__*/React.createElement(CenteredTabs, {\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(\"button\", {\n          onClick: _this.getRandomCard,\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 16\n          }\n        }, \"Draw A Single Card\"), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"reading_container\",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 16\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          className: \"card image\",\n          src: _this.state.random_card_src,\n          alt: \"#\",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 16\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"single_card_reading\",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 16\n          }\n        }, /*#__PURE__*/React.createElement(\"h3\", {\n          className: \"title\",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 19\n          }\n        }, _this.state.random_card_name), /*#__PURE__*/React.createElement(\"h4\", {\n          className: \"title\",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 19\n          }\n        }, \"Keywords:\"), /*#__PURE__*/React.createElement(\"p\", {\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 19\n          }\n        }, _this.state.random_card_keys_up), /*#__PURE__*/React.createElement(\"h3\", {\n          className: \"title\",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 19\n          }\n        }, \"Summary\"), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"description\",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 19\n          }\n        }, _this.state.random_card_description), /*#__PURE__*/React.createElement(\"h3\", {\n          className: \"title\",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 19\n          }\n        }, \"Upright\"), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"upright_description\",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 19\n          }\n        }, _this.state.random_card_upright))));\n      }\n\n      if (_this.state.random_card_flipped && !_this.state.loading && !_this.state.new) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"main-content SCR\",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 10\n          }\n        }, /*#__PURE__*/React.createElement(CenteredTabs, {\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(\"button\", {\n          onClick: _this.getRandomCard,\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 16\n          }\n        }, \"Draw A Single Card\"), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"reading_container\",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 16\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          className: \"card_image_reversed\",\n          src: _this.state.random_card_src,\n          alt: \"#\",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 16\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"single_card_reading\",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"h3\", {\n          className: \"title\",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 22\n          }\n        }, _this.state.random_card_name + ' Reversed'), /*#__PURE__*/React.createElement(\"h4\", {\n          className: \"title\",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 22\n          }\n        }, \"Keywords:\"), /*#__PURE__*/React.createElement(\"p\", {\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 22\n          }\n        }, _this.state.random_card_keys_rev), /*#__PURE__*/React.createElement(\"h3\", {\n          className: \"title\",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 22\n          }\n        }, \"Summary\"), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"description\",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 22\n          }\n        }, _this.state.random_card_description), /*#__PURE__*/React.createElement(\"h3\", {\n          className: \"title\",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 22\n          }\n        }, \"Reversed\"), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"upright_description\",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 22\n          }\n        }, _this.state.random_card_reversed))));\n      }\n    };\n\n    _this.state = {\n      new: true,\n      loading: false,\n      name: 'Card',\n      src: null,\n      random_card_flipped: null,\n      random_card_name: null,\n      random_card_description: null,\n      random_card_upright: null,\n      random_card_reversed: null\n    };\n    return _this;\n  }\n\n  return SCR;\n}(Component); // PROPS\n\n\nSCR.defaultProps = {\n  name: 'Card',\n  kind: 'Child',\n  Cards: cardData[0].Cards\n};\nexport default SCR;","map":{"version":3,"sources":["/Users/maddiemoritz/powerful-mountain-88889/client/src/pages/SCR.js"],"names":["React","Component","cardData","$","CenteredTabs","SCR","props","context","getRandomCard","console","group","flipped","Math","floor","random","self","cards","Cards","randNum","randCard","randName","name","randKeysUp","keywords","upright","randKeysRev","reversed","src","randDes","description","basic","randUpright","randReversed","reading","paras","document","getElementsByTagName","log","innerHTML","hide","setState","new","loading","random_card_flipped","random_card_name","random_card_keys_up","random_card_keys_rev","random_card_description","random_card_upright","random_card_reversed","random_card_src","setTimeout","state","addClass","removeClass","show","replace_break","groupEnd","i","length","new_p","replace","render","defaultProps","kind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport cardData from '../utils/cardData.js';\nimport $ from 'jquery';\nimport CenteredTabs from '../components/CenteredTabs'\nimport '../index.css'\n\nclass SCR extends Component {\n    constructor(props, context) {\n         super(props, context);\n\n         this.state = {\n            new: true,\n            loading: false,\n            name: 'Card',\n            src: null,\n            random_card_flipped: null,\n            random_card_name: null,\n            random_card_description: null,\n            random_card_upright: null,\n            random_card_reversed: null\n         };\n   }\n\n   getRandomCard = () => {\n      console.group('get random card');\n      let flipped =   Math.floor(Math.random() * 2) === 0 ? true : false;\n      let self = this;\n      let cards = this.props.Cards;\n      let randNum = Math.floor(Math.random() * (78 - 0 + 1));\n      let randCard = cards[randNum];\n      let randName = randCard.name;\n      let randKeysUp  = randCard.keywords.upright;\n      let randKeysRev  = randCard.keywords.reversed;\n      let src = randCard.src;\n      let randDes = randCard.description.basic;\n      let randUpright = randCard.description.upright;\n      let randReversed = randCard.description.reversed;\n      let reading = $('.reading_container');\n      let paras = document.getElementsByTagName('p');\n      console.log('card drawn',randCard);\n      $('.description').innerHTML = randDes;\n\n      reading.hide();\n\n      self.setState(\n         {\n            new: false,\n            loading: true,\n            random_card_flipped: flipped,\n            random_card_name: randName,\n            random_card_keys_up: randKeysUp,\n            random_card_keys_rev: randKeysRev,\n            random_card_description: randDes,\n            random_card_upright: randUpright,\n            random_card_reversed: randReversed,\n            random_card_src: src\n\n         }, function(){\n         setTimeout(function(){\n            self.setState({loading: false}, function(){\n               if (this.state.random_card_flipped){\n                  $('img').addClass('card_image_reversed');\n               } else {\n                  $('img.card_image').removeClass('card_image_reversed');\n               }\n               reading.show();\n            });\n            self.replace_break(paras);\n         },2000);\n      });\n      console.groupEnd();\n   }\n\n   replace_break = (paras) => {\n       console.log('replace break');\n       for (let i = 0; i < paras.length; i++) {\n           let new_p = paras[i].innerHTML.replace(/\\r?\\n/g, '<br/>');\n           paras[i].innerHTML = new_p;\n       }\n   }\n   render = () => {\n   if (this.state.loading){\n      return (\n      <div className=\"main-content SCR\">\n          <div className=\"main-content \">\n               <img className=\"pentacle\" alt=\"yeah\" src=\"https://upload.wikimedia.org/wikipedia/commons/9/97/Pentacle_2.svg\"/>\n        </div>\n      </div>\n      )\n   }\n   if (this.state.new && !this.state.loading){\n      return (\n         <div className=\"main-content SCR\">\n\n            <CenteredTabs></CenteredTabs>\n            <button onClick={this.getRandomCard}>Draw A Single Card</button>\n\n               <div className=\"reading_container\">\n               </div>\n          </div>\n      )\n   }\n   if (!this.state.random_card_flipped && !this.state.loading && !this.state.new){\n      return (\n         <div className=\"main-content SCR\">\n\n            <CenteredTabs></CenteredTabs>\n               <button onClick={ this.getRandomCard}>Draw A Single Card</button>\n               <div className=\"reading_container\">\n               <img className=\"card image\"  src={this.state.random_card_src} alt=\"#\"/>\n               <div  className=\"single_card_reading\">\n                  <h3 className=\"title\">{this.state.random_card_name}</h3>\n                  <h4 className=\"title\">Keywords:</h4>\n                  <p>{this.state.random_card_keys_up}</p>\n                  <h3 className=\"title\">Summary</h3>\n                  <p className=\"description\">{this.state.random_card_description}</p>\n                  <h3 className=\"title\">Upright</h3>\n                  <p className=\"upright_description\">{this.state.random_card_upright}</p>\n               </div>\n               </div>\n          </div>\n      )\n   }  if (this.state.random_card_flipped && !this.state.loading && !this.state.new) {\n      return (\n\n         <div className=\"main-content SCR\">\n\n            <CenteredTabs></CenteredTabs>\n               <button onClick={ this.getRandomCard}>Draw A Single Card</button>\n               <div className=\"reading_container\">\n               <img className=\"card_image_reversed\" src={this.state.random_card_src} alt=\"#\"/>\n                  <div  className=\"single_card_reading\">\n                     <h3 className=\"title\">{this.state.random_card_name +' Reversed'}</h3>\n                     <h4 className=\"title\">Keywords:</h4>\n                     <p>{this.state.random_card_keys_rev}</p>\n                     <h3 className=\"title\">Summary</h3>\n                     <p className=\"description\">{this.state.random_card_description}</p>\n                     <h3 className=\"title\">Reversed</h3>\n                     <p className=\"upright_description\">{this.state.random_card_reversed}</p>\n                  </div>\n               </div>\n          </div>\n      )\n      }\n   }\n}\n\n// PROPS\nSCR.defaultProps = {\n    name:'Card',\n    kind: 'Child',\n    Cards: cardData[0].Cards,\n};\n\n\nexport default SCR;"]},"metadata":{},"sourceType":"module"}