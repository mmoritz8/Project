{"ast":null,"code":"import _classCallCheck from \"/Users/maddiemoritz/powerful-mountain-88889/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/maddiemoritz/powerful-mountain-88889/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/maddiemoritz/powerful-mountain-88889/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/maddiemoritz/powerful-mountain-88889/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/maddiemoritz/powerful-mountain-88889/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/maddiemoritz/powerful-mountain-88889/client/src/pages/FullReading.js\";\nimport React, { Component } from 'react';\nimport cardData from '../utils/cardData.js';\nimport $ from 'jquery';\nvar chosen_cards = [];\nvar globalCards = cardData[0].Cards.slice();\nvar cardAmount = 78;\n\nvar FullReading = /*#__PURE__*/function (_Component) {\n  _inherits(FullReading, _Component);\n\n  function FullReading(props, context) {\n    var _this;\n\n    _classCallCheck(this, FullReading);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FullReading).call(this, props, context));\n\n    _this.componentWillMount = function () {\n      console.log('COMP WILL MOUNT');\n      chosen_cards = [];\n      console.log('global cards', globalCards); // Add back to cards\n\n      for (var i = 0; i < cardData[0].Cards.length; i++) {\n        cardData[0].Cards[i].back = 'https://preview.ibb.co/maQOQa/back.jpg';\n      }\n    };\n\n    _this.getRandomCard = function (e) {\n      console.group('get random card');\n      var flipped = Math.floor(Math.random() * 2) === 0 ? true : false;\n\n      var self = _assertThisInitialized(_assertThisInitialized(_this));\n\n      var cards = globalCards;\n      var randNum = Math.floor(Math.random() * (cardAmount - 0 + 1));\n      var randCard = cards[randNum];\n      var randName = randCard.name;\n      var randKeysUp = randCard.keywords.upright;\n      var randKeysRev = randCard.keywords.reversed;\n      var src = randCard.src;\n      var randDes = randCard.description.basic;\n      var randUpright = randCard.description.upright;\n      var randReversed = randCard.description.reversed;\n      var reading = $('.reading_container');\n      var paras = document.getElementsByTagName('p');\n      console.log('flipped', flipped);\n\n      if (flipped) {\n        randCard.reversed = true;\n      }\n\n      console.log('card drawn', randCard);\n      console.log('randNum', randNum);\n      chosen_cards.push(randCard);\n      cards.splice(randNum, 1);\n      console.log('cards left:', cards);\n      cardAmount--;\n      console.log('card amount', cardAmount);\n      console.log(chosen_cards);\n\n      if (chosen_cards.length >= 10) {\n        self.add_info();\n        self.setState({\n          loading: true\n        }, function () {\n          setTimeout(function () {\n            self.setState({\n              loading: false,\n              reading: true\n            });\n            globalCards = cardData[0].Cards.slice();\n            cardAmount = 78;\n            self.replace_break(paras);\n            console.log(globalCards);\n          }, 2000);\n        });\n      }\n\n      var clickedCard = e.target;\n      $(clickedCard).addClass('selected');\n      console.groupEnd();\n    };\n\n    _this.replace_break = function (paras) {\n      console.log('replace break');\n\n      for (var i = 0; i < paras.length; i++) {\n        var new_p = paras[i].innerHTML.replace(/\\r?\\n/g, '<br/>');\n        paras[i].innerHTML = new_p;\n      }\n    };\n\n    _this.add_info = function () {\n      console.log('add info');\n\n      for (var i = 0; i < chosen_cards.length; i++) {\n        chosen_cards[0].type = \"Card 1: The Present\";\n        chosen_cards[1].type = \"Card 2: The Challenge\";\n        chosen_cards[2].type = \"Card 3: The Past\";\n        chosen_cards[3].type = \"Card 4: The Future\";\n        chosen_cards[4].type = \"Card 5: Above (Best Outcome)\";\n        chosen_cards[5].type = \"Card 6: Below (The Subconscious)\";\n        chosen_cards[6].type = \"Card 7: Advice\";\n        chosen_cards[7].type = \"Card 8: External Influences\";\n        chosen_cards[8].type = \"Card 9: Hopes and Fears\";\n        chosen_cards[9].type = \"Card 10: Outcome\";\n      }\n    };\n\n    _this.back = function () {\n      console.log('back');\n\n      _this.setState({\n        loading: false,\n        reading: false\n      });\n\n      chosen_cards = [];\n    };\n\n    _this.render = function () {\n      if (!_this.state.loading && !_this.state.reading) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"main-content \",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 14\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"cards\",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            color: '#fff'\n          },\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 19\n          }\n        }, \"Select 10 cards\"), cardData[0].Cards.map(function (card, i) {\n          return /*#__PURE__*/React.createElement(\"img\", {\n            className: \"full_card\",\n            key: 'card' + i,\n            src: card.back,\n            onClick: this.getRandomCard,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 30\n            }\n          });\n        }.bind(_assertThisInitialized(_assertThisInitialized(_this))))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"reading_container\",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 19\n          }\n        }));\n      }\n\n      if (_this.state.loading) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"main-content \",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          className: \"pentacle\",\n          src: \"https://upload.wikimedia.org/wikipedia/commons/9/97/Pentacle_2.svg\",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 11\n          }\n        }));\n      }\n\n      if (_this.state.reading) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"main-content \",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"reading_container\",\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 16\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          onClick: _this.back,\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 16\n          }\n        }, \"Back\"), chosen_cards.map(function (card, i) {\n          if (!card.reversed) {\n            return /*#__PURE__*/React.createElement(\"div\", {\n              key: i,\n              className: \"fcr_container\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 22\n              }\n            }, /*#__PURE__*/React.createElement(\"img\", {\n              className: \"card_image\",\n              src: card.src,\n              alt: \"\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 61\n              }\n            }), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"single_card_reading\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 25\n              }\n            }, /*#__PURE__*/React.createElement(\"h2\", {\n              className: \"type\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 28\n              }\n            }, card.type), /*#__PURE__*/React.createElement(\"h3\", {\n              className: \"title\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 28\n              }\n            }, card.name), /*#__PURE__*/React.createElement(\"h4\", {\n              className: \"title\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 28\n              }\n            }, \"Keywords:\"), /*#__PURE__*/React.createElement(\"p\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 28\n              }\n            }, card.keywords.upright), /*#__PURE__*/React.createElement(\"h3\", {\n              className: \"title\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 28\n              }\n            }, \"Summary\"), /*#__PURE__*/React.createElement(\"p\", {\n              className: \"description\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 28\n              }\n            }, card.description.basic), /*#__PURE__*/React.createElement(\"h3\", {\n              className: \"title\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 28\n              }\n            }, \"Upright\"), /*#__PURE__*/React.createElement(\"p\", {\n              className: \"upright_description\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 28\n              }\n            }, card.description.upright)), /*#__PURE__*/React.createElement(\"br\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 23\n              }\n            }));\n          } else {\n            return /*#__PURE__*/React.createElement(\"div\", {\n              key: i,\n              className: \"fcr_container\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 22\n              }\n            }, /*#__PURE__*/React.createElement(\"img\", {\n              className: \"card_image card_image_reversed\",\n              src: card.src,\n              alt: \"\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 61\n              }\n            }), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"single_card_reading\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 24\n              }\n            }, /*#__PURE__*/React.createElement(\"h2\", {\n              className: \"type\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 26\n              }\n            }, card.type), /*#__PURE__*/React.createElement(\"h3\", {\n              className: \"title\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 26\n              }\n            }, card.name + ' Reversed'), /*#__PURE__*/React.createElement(\"h4\", {\n              className: \"title\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 26\n              }\n            }, \"Keywords:\"), /*#__PURE__*/React.createElement(\"p\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 26\n              }\n            }, card.keywords.reversed), /*#__PURE__*/React.createElement(\"h3\", {\n              className: \"title\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 26\n              }\n            }, \"Summary\"), /*#__PURE__*/React.createElement(\"p\", {\n              className: \"description\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 26\n              }\n            }, card.description.basic), /*#__PURE__*/React.createElement(\"h3\", {\n              className: \"title\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 26\n              }\n            }, \"Reversed\"), /*#__PURE__*/React.createElement(\"p\", {\n              className: \"upright_description\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 26\n              }\n            }, card.description.reversed)), /*#__PURE__*/React.createElement(\"br\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 23\n              }\n            }));\n          }\n        }), /*#__PURE__*/React.createElement(\"button\", {\n          onClick: _this.back,\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 16\n          }\n        }, \"Back\")));\n      }\n    };\n\n    var _self = _assertThisInitialized(_assertThisInitialized(_this));\n\n    _this.state = {\n      new: true,\n      loading: false,\n      reading: false,\n      name: 'Card',\n      src: null,\n      random_card_flipped: null,\n      random_card_name: null,\n      random_card_description: null,\n      random_card_upright: null,\n      random_card_reversed: null\n    };\n    return _this;\n  }\n\n  return FullReading;\n}(Component); // PROPS\n\n\nFullReading.defaultProps = {\n  chosen_cards: [],\n  name: 'Card',\n  kind: 'Child',\n  Cards: globalCards\n};\nexport default FullReading;","map":{"version":3,"sources":["/Users/maddiemoritz/powerful-mountain-88889/client/src/pages/FullReading.js"],"names":["React","Component","cardData","$","chosen_cards","globalCards","Cards","slice","cardAmount","FullReading","props","context","componentWillMount","console","log","i","length","back","getRandomCard","e","group","flipped","Math","floor","random","self","cards","randNum","randCard","randName","name","randKeysUp","keywords","upright","randKeysRev","reversed","src","randDes","description","basic","randUpright","randReversed","reading","paras","document","getElementsByTagName","push","splice","add_info","setState","loading","setTimeout","replace_break","clickedCard","target","addClass","groupEnd","new_p","innerHTML","replace","type","render","state","color","map","card","bind","new","random_card_flipped","random_card_name","random_card_description","random_card_upright","random_card_reversed","defaultProps","kind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport cardData from '../utils/cardData.js';\nimport $ from 'jquery';\nlet chosen_cards = [];\nlet globalCards = cardData[0].Cards.slice();\nlet cardAmount = 78;\n\nclass FullReading extends Component {\n   constructor(props, context) {\n   super(props, context);\n   const self = this;\n\n   this.state = {\n      new: true,\n      loading: false,\n      reading: false,\n      name: 'Card',\n      src: null,\n      random_card_flipped: null,\n      random_card_name: null,\n      random_card_description: null,\n      random_card_upright: null,\n      random_card_reversed: null\n   };\n}\n\n   componentWillMount = () => {\n      console.log('COMP WILL MOUNT');\n      chosen_cards = [];\n      console.log('global cards',globalCards);\n      // Add back to cards\n      for (let i=0; i<cardData[0].Cards.length; i++ ){\n         cardData[0].Cards[i].back = 'https://preview.ibb.co/maQOQa/back.jpg';\n      }\n   };\n\n  getRandomCard = (e) => {\n      console.group('get random card');\n      let flipped =   Math.floor(Math.random() * 2) === 0 ? true : false;\n      let self = this;\n      let cards = globalCards;\n      let randNum = Math.floor(Math.random() * (cardAmount - 0 + 1));\n      let randCard = cards[randNum];\n      let randName = randCard.name;\n      let randKeysUp  = randCard.keywords.upright;\n      let randKeysRev  = randCard.keywords.reversed;\n      let src = randCard.src;\n      let randDes = randCard.description.basic;\n      let randUpright = randCard.description.upright;\n      let randReversed = randCard.description.reversed;\n      let reading = $('.reading_container');\n      let paras = document.getElementsByTagName('p');\n      console.log('flipped', flipped);\n\n      if (flipped){\n         randCard.reversed = true;\n      }\n      console.log('card drawn',randCard);\n      console.log('randNum', randNum);\n\n\n      chosen_cards.push(randCard);\n      cards.splice(randNum, 1);\n      console.log('cards left:',cards);\n      cardAmount --;\n      console.log('card amount',cardAmount);\n      console.log(chosen_cards);\n\n      if (chosen_cards.length >= 10){\n         self.add_info();\n         self.setState({loading: true}, function(){\n            setTimeout(function(){\n\n               self.setState({\n                  loading: false,\n                  reading: true\n               });\n               globalCards = cardData[0].Cards.slice();\n               cardAmount = 78;\n               self.replace_break(paras);\n\n               console.log(globalCards);\n            },2000);\n         });\n      }\n\n      let clickedCard = e.target;\n      $(clickedCard).addClass('selected');\n      console.groupEnd();\n  }\n\n   replace_break = (paras) => {\n      console.log('replace break');\n      for (let i = 0; i < paras.length; i++) {\n         let new_p = paras[i].innerHTML.replace(/\\r?\\n/g, '<br/>');\n         paras[i].innerHTML = new_p;\n      }\n   }\n\n   add_info = () => {\n      console.log('add info');\n      for (let i = 0; i < chosen_cards.length; i++) {\n         chosen_cards[0].type = \"Card 1: The Present\";\n         chosen_cards[1].type = \"Card 2: The Challenge\";\n         chosen_cards[2].type = \"Card 3: The Past\";\n         chosen_cards[3].type = \"Card 4: The Future\";\n         chosen_cards[4].type = \"Card 5: Above (Best Outcome)\";\n         chosen_cards[5].type = \"Card 6: Below (The Subconscious)\";\n         chosen_cards[6].type = \"Card 7: Advice\";\n         chosen_cards[7].type = \"Card 8: External Influences\";\n         chosen_cards[8].type = \"Card 9: Hopes and Fears\";\n         chosen_cards[9].type = \"Card 10: Outcome\";\n      }\n   }\n\n   back = () => {\n      console.log('back');\n      this.setState({\n         loading: false,\n         reading: false\n      });\n      chosen_cards = [];\n   }\n\n   render = () => {\n    if (!this.state.loading && !this.state.reading){\n         return (\n             <div className=\"main-content \">\n                  <div className=\"cards\">\n                  <p style={{color: '#fff'}}>Select 10 cards</p>\n                   {cardData[0].Cards.map(function(card, i){\n                     return (<img className=\"full_card\" key={'card'+i} src={card.back} onClick={this.getRandomCard}/>)\n                   }.bind(this))\n                  }\n                  </div>\n                  <div className=\"reading_container\">\n                  </div>\n             </div>\n         )\n      }\n    if (this.state.loading){\n      return (\n        <div className=\"main-content \">\n          <img className=\"pentacle\" src=\"https://upload.wikimedia.org/wikipedia/commons/9/97/Pentacle_2.svg\"/>\n        </div>\n      )\n    }\n    if (this.state.reading) {\n      return (\n        <div className=\"main-content \" >\n               <div className=\"reading_container\">\n               <button onClick={this.back}>Back</button>\n               {\n                chosen_cards.map(function(card, i){\n                  if (!card.reversed){\n                       return (\n                     <div key={i} className=\"fcr_container\"><img className=\"card_image\"  src={card.src} alt=\"\"/>\n                        <div  className=\"single_card_reading\">\n                           <h2 className=\"type\">{card.type}</h2>\n                           <h3 className=\"title\">{card.name}</h3>\n                           <h4 className=\"title\">Keywords:</h4>\n                           <p>{card.keywords.upright}</p>\n                           <h3 className=\"title\">Summary</h3>\n                           <p className=\"description\">{card.description.basic}</p>\n                           <h3 className=\"title\">Upright</h3>\n                           <p className=\"upright_description\">{card.description.upright}</p>\n                        </div>\n                      <br/>\n                    </div>)\n                  } else {\n                       return (\n                     <div key={i} className=\"fcr_container\"><img className=\"card_image card_image_reversed\" src={card.src} alt=\"\"/>\n                       <div  className=\"single_card_reading\">\n                         <h2 className=\"type\">{card.type}</h2>\n                         <h3 className=\"title\">{card.name+ ' Reversed'}</h3>\n                         <h4 className=\"title\">Keywords:</h4>\n                         <p>{card.keywords.reversed}</p>\n                         <h3 className=\"title\">Summary</h3>\n                         <p className=\"description\">{card.description.basic}</p>\n                         <h3 className=\"title\">Reversed</h3>\n                         <p className=\"upright_description\">{card.description.reversed}</p>\n                      </div>\n                      <br/>\n                    </div>)\n                  }\n                })\n               }\n               <button onClick={this.back}>Back</button>\n            </div>\n         </div>\n      )\n   }\n   }\n}\n\n// PROPS\nFullReading.defaultProps = {\n    chosen_cards: [],\n    name:'Card',\n    kind: 'Child',\n    Cards: globalCards,\n};\n\n\n\n\nexport default FullReading;"]},"metadata":{},"sourceType":"module"}